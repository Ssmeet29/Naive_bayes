{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":6453754,"sourceType":"datasetVersion","datasetId":3725579}],"dockerImageVersionId":30786,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"import pandas as pd\n\n# Load the dataset\nloan_data = pd.read_csv('/kaggle/input/loan-default/Loan_default.csv')  # Replace with the correct path on Kaggle\n\n# Display basic info and first few rows\nloan_data.info()\nloan_data.head()","metadata":{"execution":{"iopub.status.busy":"2024-10-15T15:29:16.456080Z","iopub.execute_input":"2024-10-15T15:29:16.456469Z","iopub.status.idle":"2024-10-15T15:29:18.450621Z","shell.execute_reply.started":"2024-10-15T15:29:16.456433Z","shell.execute_reply":"2024-10-15T15:29:18.449004Z"},"trusted":true},"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 255347 entries, 0 to 255346\nData columns (total 18 columns):\n #   Column          Non-Null Count   Dtype  \n---  ------          --------------   -----  \n 0   LoanID          255347 non-null  object \n 1   Age             255347 non-null  int64  \n 2   Income          255347 non-null  int64  \n 3   LoanAmount      255347 non-null  int64  \n 4   CreditScore     255347 non-null  int64  \n 5   MonthsEmployed  255347 non-null  int64  \n 6   NumCreditLines  255347 non-null  int64  \n 7   InterestRate    255347 non-null  float64\n 8   LoanTerm        255347 non-null  int64  \n 9   DTIRatio        255347 non-null  float64\n 10  Education       255347 non-null  object \n 11  EmploymentType  255347 non-null  object \n 12  MaritalStatus   255347 non-null  object \n 13  HasMortgage     255347 non-null  object \n 14  HasDependents   255347 non-null  object \n 15  LoanPurpose     255347 non-null  object \n 16  HasCoSigner     255347 non-null  object \n 17  Default         255347 non-null  int64  \ndtypes: float64(2), int64(8), object(8)\nmemory usage: 35.1+ MB\n","output_type":"stream"},{"execution_count":1,"output_type":"execute_result","data":{"text/plain":"       LoanID  Age  Income  LoanAmount  CreditScore  MonthsEmployed  \\\n0  I38PQUQS96   56   85994       50587          520              80   \n1  HPSK72WA7R   69   50432      124440          458              15   \n2  C1OZ6DPJ8Y   46   84208      129188          451              26   \n3  V2KKSFM3UN   32   31713       44799          743               0   \n4  EY08JDHTZP   60   20437        9139          633               8   \n\n   NumCreditLines  InterestRate  LoanTerm  DTIRatio    Education  \\\n0               4         15.23        36      0.44   Bachelor's   \n1               1          4.81        60      0.68     Master's   \n2               3         21.17        24      0.31     Master's   \n3               3          7.07        24      0.23  High School   \n4               4          6.51        48      0.73   Bachelor's   \n\n  EmploymentType MaritalStatus HasMortgage HasDependents LoanPurpose  \\\n0      Full-time      Divorced         Yes           Yes       Other   \n1      Full-time       Married          No            No       Other   \n2     Unemployed      Divorced         Yes           Yes        Auto   \n3      Full-time       Married          No            No    Business   \n4     Unemployed      Divorced          No           Yes        Auto   \n\n  HasCoSigner  Default  \n0         Yes        0  \n1         Yes        0  \n2          No        1  \n3          No        0  \n4          No        0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>LoanID</th>\n      <th>Age</th>\n      <th>Income</th>\n      <th>LoanAmount</th>\n      <th>CreditScore</th>\n      <th>MonthsEmployed</th>\n      <th>NumCreditLines</th>\n      <th>InterestRate</th>\n      <th>LoanTerm</th>\n      <th>DTIRatio</th>\n      <th>Education</th>\n      <th>EmploymentType</th>\n      <th>MaritalStatus</th>\n      <th>HasMortgage</th>\n      <th>HasDependents</th>\n      <th>LoanPurpose</th>\n      <th>HasCoSigner</th>\n      <th>Default</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>I38PQUQS96</td>\n      <td>56</td>\n      <td>85994</td>\n      <td>50587</td>\n      <td>520</td>\n      <td>80</td>\n      <td>4</td>\n      <td>15.23</td>\n      <td>36</td>\n      <td>0.44</td>\n      <td>Bachelor's</td>\n      <td>Full-time</td>\n      <td>Divorced</td>\n      <td>Yes</td>\n      <td>Yes</td>\n      <td>Other</td>\n      <td>Yes</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>HPSK72WA7R</td>\n      <td>69</td>\n      <td>50432</td>\n      <td>124440</td>\n      <td>458</td>\n      <td>15</td>\n      <td>1</td>\n      <td>4.81</td>\n      <td>60</td>\n      <td>0.68</td>\n      <td>Master's</td>\n      <td>Full-time</td>\n      <td>Married</td>\n      <td>No</td>\n      <td>No</td>\n      <td>Other</td>\n      <td>Yes</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>C1OZ6DPJ8Y</td>\n      <td>46</td>\n      <td>84208</td>\n      <td>129188</td>\n      <td>451</td>\n      <td>26</td>\n      <td>3</td>\n      <td>21.17</td>\n      <td>24</td>\n      <td>0.31</td>\n      <td>Master's</td>\n      <td>Unemployed</td>\n      <td>Divorced</td>\n      <td>Yes</td>\n      <td>Yes</td>\n      <td>Auto</td>\n      <td>No</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>V2KKSFM3UN</td>\n      <td>32</td>\n      <td>31713</td>\n      <td>44799</td>\n      <td>743</td>\n      <td>0</td>\n      <td>3</td>\n      <td>7.07</td>\n      <td>24</td>\n      <td>0.23</td>\n      <td>High School</td>\n      <td>Full-time</td>\n      <td>Married</td>\n      <td>No</td>\n      <td>No</td>\n      <td>Business</td>\n      <td>No</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>EY08JDHTZP</td>\n      <td>60</td>\n      <td>20437</td>\n      <td>9139</td>\n      <td>633</td>\n      <td>8</td>\n      <td>4</td>\n      <td>6.51</td>\n      <td>48</td>\n      <td>0.73</td>\n      <td>Bachelor's</td>\n      <td>Unemployed</td>\n      <td>Divorced</td>\n      <td>No</td>\n      <td>Yes</td>\n      <td>Auto</td>\n      <td>No</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":1},{"cell_type":"code","source":"# Drop the LoanID column as it's not useful for prediction\nloan_data_cleaned = loan_data.drop('LoanID', axis=1)\n\n# Display the updated data to confirm\nloan_data_cleaned.head()","metadata":{"execution":{"iopub.status.busy":"2024-10-15T15:31:54.232313Z","iopub.execute_input":"2024-10-15T15:31:54.233414Z","iopub.status.idle":"2024-10-15T15:31:54.274071Z","shell.execute_reply.started":"2024-10-15T15:31:54.233366Z","shell.execute_reply":"2024-10-15T15:31:54.273014Z"},"trusted":true},"outputs":[{"execution_count":2,"output_type":"execute_result","data":{"text/plain":"   Age  Income  LoanAmount  CreditScore  MonthsEmployed  NumCreditLines  \\\n0   56   85994       50587          520              80               4   \n1   69   50432      124440          458              15               1   \n2   46   84208      129188          451              26               3   \n3   32   31713       44799          743               0               3   \n4   60   20437        9139          633               8               4   \n\n   InterestRate  LoanTerm  DTIRatio    Education EmploymentType MaritalStatus  \\\n0         15.23        36      0.44   Bachelor's      Full-time      Divorced   \n1          4.81        60      0.68     Master's      Full-time       Married   \n2         21.17        24      0.31     Master's     Unemployed      Divorced   \n3          7.07        24      0.23  High School      Full-time       Married   \n4          6.51        48      0.73   Bachelor's     Unemployed      Divorced   \n\n  HasMortgage HasDependents LoanPurpose HasCoSigner  Default  \n0         Yes           Yes       Other         Yes        0  \n1          No            No       Other         Yes        0  \n2         Yes           Yes        Auto          No        1  \n3          No            No    Business          No        0  \n4          No           Yes        Auto          No        0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Age</th>\n      <th>Income</th>\n      <th>LoanAmount</th>\n      <th>CreditScore</th>\n      <th>MonthsEmployed</th>\n      <th>NumCreditLines</th>\n      <th>InterestRate</th>\n      <th>LoanTerm</th>\n      <th>DTIRatio</th>\n      <th>Education</th>\n      <th>EmploymentType</th>\n      <th>MaritalStatus</th>\n      <th>HasMortgage</th>\n      <th>HasDependents</th>\n      <th>LoanPurpose</th>\n      <th>HasCoSigner</th>\n      <th>Default</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>56</td>\n      <td>85994</td>\n      <td>50587</td>\n      <td>520</td>\n      <td>80</td>\n      <td>4</td>\n      <td>15.23</td>\n      <td>36</td>\n      <td>0.44</td>\n      <td>Bachelor's</td>\n      <td>Full-time</td>\n      <td>Divorced</td>\n      <td>Yes</td>\n      <td>Yes</td>\n      <td>Other</td>\n      <td>Yes</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>69</td>\n      <td>50432</td>\n      <td>124440</td>\n      <td>458</td>\n      <td>15</td>\n      <td>1</td>\n      <td>4.81</td>\n      <td>60</td>\n      <td>0.68</td>\n      <td>Master's</td>\n      <td>Full-time</td>\n      <td>Married</td>\n      <td>No</td>\n      <td>No</td>\n      <td>Other</td>\n      <td>Yes</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>46</td>\n      <td>84208</td>\n      <td>129188</td>\n      <td>451</td>\n      <td>26</td>\n      <td>3</td>\n      <td>21.17</td>\n      <td>24</td>\n      <td>0.31</td>\n      <td>Master's</td>\n      <td>Unemployed</td>\n      <td>Divorced</td>\n      <td>Yes</td>\n      <td>Yes</td>\n      <td>Auto</td>\n      <td>No</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>32</td>\n      <td>31713</td>\n      <td>44799</td>\n      <td>743</td>\n      <td>0</td>\n      <td>3</td>\n      <td>7.07</td>\n      <td>24</td>\n      <td>0.23</td>\n      <td>High School</td>\n      <td>Full-time</td>\n      <td>Married</td>\n      <td>No</td>\n      <td>No</td>\n      <td>Business</td>\n      <td>No</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>60</td>\n      <td>20437</td>\n      <td>9139</td>\n      <td>633</td>\n      <td>8</td>\n      <td>4</td>\n      <td>6.51</td>\n      <td>48</td>\n      <td>0.73</td>\n      <td>Bachelor's</td>\n      <td>Unemployed</td>\n      <td>Divorced</td>\n      <td>No</td>\n      <td>Yes</td>\n      <td>Auto</td>\n      <td>No</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":2},{"cell_type":"code","source":"from sklearn.preprocessing import LabelEncoder\n\n# Initialize the label encoder\nlabel_encoders = {}\n\n# Loop through all columns with object data type and apply Label Encoding\nfor column in loan_data_cleaned.select_dtypes(include=['object']).columns:\n    le = LabelEncoder()\n    loan_data_cleaned[column] = le.fit_transform(loan_data_cleaned[column])\n    label_encoders[column] = le  # Store the encoder for later use (if needed)\n\n# Display the first few rows to verify the encoding\nloan_data_cleaned.head()","metadata":{"execution":{"iopub.status.busy":"2024-10-15T15:33:25.850341Z","iopub.execute_input":"2024-10-15T15:33:25.850756Z","iopub.status.idle":"2024-10-15T15:33:26.762040Z","shell.execute_reply.started":"2024-10-15T15:33:25.850717Z","shell.execute_reply":"2024-10-15T15:33:26.760994Z"},"trusted":true},"outputs":[{"execution_count":3,"output_type":"execute_result","data":{"text/plain":"   Age  Income  LoanAmount  CreditScore  MonthsEmployed  NumCreditLines  \\\n0   56   85994       50587          520              80               4   \n1   69   50432      124440          458              15               1   \n2   46   84208      129188          451              26               3   \n3   32   31713       44799          743               0               3   \n4   60   20437        9139          633               8               4   \n\n   InterestRate  LoanTerm  DTIRatio  Education  EmploymentType  MaritalStatus  \\\n0         15.23        36      0.44          0               0              0   \n1          4.81        60      0.68          2               0              1   \n2         21.17        24      0.31          2               3              0   \n3          7.07        24      0.23          1               0              1   \n4          6.51        48      0.73          0               3              0   \n\n   HasMortgage  HasDependents  LoanPurpose  HasCoSigner  Default  \n0            1              1            4            1        0  \n1            0              0            4            1        0  \n2            1              1            0            0        1  \n3            0              0            1            0        0  \n4            0              1            0            0        0  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Age</th>\n      <th>Income</th>\n      <th>LoanAmount</th>\n      <th>CreditScore</th>\n      <th>MonthsEmployed</th>\n      <th>NumCreditLines</th>\n      <th>InterestRate</th>\n      <th>LoanTerm</th>\n      <th>DTIRatio</th>\n      <th>Education</th>\n      <th>EmploymentType</th>\n      <th>MaritalStatus</th>\n      <th>HasMortgage</th>\n      <th>HasDependents</th>\n      <th>LoanPurpose</th>\n      <th>HasCoSigner</th>\n      <th>Default</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>56</td>\n      <td>85994</td>\n      <td>50587</td>\n      <td>520</td>\n      <td>80</td>\n      <td>4</td>\n      <td>15.23</td>\n      <td>36</td>\n      <td>0.44</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>4</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>69</td>\n      <td>50432</td>\n      <td>124440</td>\n      <td>458</td>\n      <td>15</td>\n      <td>1</td>\n      <td>4.81</td>\n      <td>60</td>\n      <td>0.68</td>\n      <td>2</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>4</td>\n      <td>1</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>46</td>\n      <td>84208</td>\n      <td>129188</td>\n      <td>451</td>\n      <td>26</td>\n      <td>3</td>\n      <td>21.17</td>\n      <td>24</td>\n      <td>0.31</td>\n      <td>2</td>\n      <td>3</td>\n      <td>0</td>\n      <td>1</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>32</td>\n      <td>31713</td>\n      <td>44799</td>\n      <td>743</td>\n      <td>0</td>\n      <td>3</td>\n      <td>7.07</td>\n      <td>24</td>\n      <td>0.23</td>\n      <td>1</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>60</td>\n      <td>20437</td>\n      <td>9139</td>\n      <td>633</td>\n      <td>8</td>\n      <td>4</td>\n      <td>6.51</td>\n      <td>48</td>\n      <td>0.73</td>\n      <td>0</td>\n      <td>3</td>\n      <td>0</td>\n      <td>0</td>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}],"execution_count":3},{"cell_type":"code","source":"# Split the data into features (X) and target (y)\nX = loan_data_cleaned.drop('Default', axis=1)  # Features\ny = loan_data_cleaned['Default']  # Target\n\n# Display the shape of the features and target to confirm\nprint(X.shape, y.shape)","metadata":{"execution":{"iopub.status.busy":"2024-10-15T15:34:25.951278Z","iopub.execute_input":"2024-10-15T15:34:25.952117Z","iopub.status.idle":"2024-10-15T15:34:25.990953Z","shell.execute_reply.started":"2024-10-15T15:34:25.952052Z","shell.execute_reply":"2024-10-15T15:34:25.989872Z"},"trusted":true},"outputs":[{"name":"stdout","text":"(255347, 16) (255347,)\n","output_type":"stream"}],"execution_count":4},{"cell_type":"code","source":"from sklearn.model_selection import train_test_split\n\n# Split the data into training and testing sets (70% train, 30% test)\nX_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)\n\n# Display the shape of the training and testing sets\nprint(X_train.shape, X_test.shape, y_train.shape, y_test.shape)","metadata":{"execution":{"iopub.status.busy":"2024-10-15T15:35:34.645471Z","iopub.execute_input":"2024-10-15T15:35:34.645896Z","iopub.status.idle":"2024-10-15T15:35:34.824099Z","shell.execute_reply.started":"2024-10-15T15:35:34.645859Z","shell.execute_reply":"2024-10-15T15:35:34.823095Z"},"trusted":true},"outputs":[{"name":"stdout","text":"(178742, 16) (76605, 16) (178742,) (76605,)\n","output_type":"stream"}],"execution_count":5},{"cell_type":"code","source":"from sklearn.preprocessing import StandardScaler\n\n# Initialize the scaler\nscaler = StandardScaler()\n\n# Fit the scaler on the training data and transform it\nX_train_scaled = scaler.fit_transform(X_train)\n\n# Use the same scaler to transform the test data\nX_test_scaled = scaler.transform(X_test)\n\n# X_train_scaled and X_test_scaled are ready for model training","metadata":{"execution":{"iopub.status.busy":"2024-10-15T15:36:10.176014Z","iopub.execute_input":"2024-10-15T15:36:10.176800Z","iopub.status.idle":"2024-10-15T15:36:10.252891Z","shell.execute_reply.started":"2024-10-15T15:36:10.176747Z","shell.execute_reply":"2024-10-15T15:36:10.251716Z"},"trusted":true},"outputs":[],"execution_count":7},{"cell_type":"code","source":"from sklearn.naive_bayes import GaussianNB\nfrom sklearn.metrics import accuracy_score, classification_report, confusion_matrix\n\n# Initialize the Gaussian Naive Bayes model\nnb_model = GaussianNB()\n\n# Train the model on the scaled training data\nnb_model.fit(X_train_scaled, y_train)\n\n# Make predictions on the test data\ny_pred = nb_model.predict(X_test_scaled)\n\n# Evaluate the model\naccuracy = accuracy_score(y_test, y_pred)\nconf_matrix = confusion_matrix(y_test, y_pred)\nclass_report = classification_report(y_test, y_pred)\n\n# Display the evaluation metrics\nprint(f\"Accuracy: {accuracy * 100:.2f}%\")\nprint(\"Confusion Matrix:\")\nprint(conf_matrix)\nprint(\"Classification Report:\")\nprint(class_report)","metadata":{"execution":{"iopub.status.busy":"2024-10-15T15:36:20.052859Z","iopub.execute_input":"2024-10-15T15:36:20.053577Z","iopub.status.idle":"2024-10-15T15:36:20.267413Z","shell.execute_reply.started":"2024-10-15T15:36:20.053532Z","shell.execute_reply":"2024-10-15T15:36:20.266283Z"},"trusted":true},"outputs":[{"name":"stdout","text":"Accuracy: 88.45%\nConfusion Matrix:\n[[67609    72]\n [ 8778   146]]\nClassification Report:\n              precision    recall  f1-score   support\n\n           0       0.89      1.00      0.94     67681\n           1       0.67      0.02      0.03      8924\n\n    accuracy                           0.88     76605\n   macro avg       0.78      0.51      0.49     76605\nweighted avg       0.86      0.88      0.83     76605\n\n","output_type":"stream"}],"execution_count":8},{"cell_type":"code","source":"import matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.metrics import roc_curve, auc\n\n# Confusion Matrix Heatmap\nplt.figure(figsize=(6, 4))\nsns.heatmap(conf_matrix, annot=True, fmt='d', cmap='Blues', xticklabels=['Non-Default', 'Default'], \n            yticklabels=['Non-Default', 'Default'])\nplt.xlabel('Predicted')\nplt.ylabel('Actual')\nplt.title('Confusion Matrix')\nplt.show()\n\nloc=\"lower right\")\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-10-15T15:37:03.444115Z","iopub.execute_input":"2024-10-15T15:37:03.444582Z","iopub.status.idle":"2024-10-15T15:37:04.404891Z","shell.execute_reply.started":"2024-10-15T15:37:03.444544Z","shell.execute_reply":"2024-10-15T15:37:04.403737Z"},"trusted":true},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 600x400 with 2 Axes>","image/png":""},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"<Figure size 600x400 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":9}]}